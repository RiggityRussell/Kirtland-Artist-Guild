@model Kirtland_Artist_Guild.Models.ArtisticStyleViewModel
@{
    ViewData["Title"] = "Artistic Style";
}
@section styles {
    <link rel="stylesheet" href="~/css/Artistic_Style.css">
}

<div class="text-center">
    <h1 class="display-4">Artistic Style</h1>
    <p></p>
</div>

<div class="dropdown d-flex justify-content-center">
    @*This holds all three dropdown filters*@
    
    @*Button 1 begins*@
    <a class="btn btn-secondary dropdown-toggle mx-2" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
        Filter By Medium
    </a>
    <ul class="dropdown-menu">
        @foreach(var artmedium in Model.ArtMediums)
        {
            @if (artmedium.ID == (int)ViewData["CurrentMediumFilter"])
            {
                <li><a class="dropdown-item" href="?ColorFilter=@ViewData["CurrentColorFilter"]&MediumFilter=0&StyleFilter=@ViewData["CurrentStyleFilter"]" style="color:red">@artmedium.Name</a></li>
            }
            else
            {
                <li><a class="dropdown-item" href="?ColorFilter=@ViewData["CurrentColorFilter"]&MediumFilter=@artmedium.ID&StyleFilter=@ViewData["CurrentStyleFilter"]">@artmedium.Name</a></li>
            }
        }
    </ul>
    @*Button 1 ends*@

    @*Button 2 begins*@
    <a class="btn btn-secondary dropdown-toggle mx-2" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
        Filter by Color
    </a>
    <ul class="dropdown-menu">
        @foreach (var artcolor in Model.ArtColors)
        {
            @if(artcolor.ID == (int)ViewData["CurrentColorFilter"])
            {
                <li><a class="dropdown-item" href="?ColorFilter=0&MediumFilter=@ViewData["CurrentMediumFilter"]&StyleFilter=@ViewData["CurrentStyleFilter"]" style="color:red">@artcolor.Name</a></li>
            }
            else
            {
                <li><a class="dropdown-item" href="?ColorFilter=@artcolor.ID&MediumFilter=@ViewData["CurrentMediumFilter"]&StyleFilter=@ViewData["CurrentStyleFilter"]">@artcolor.Name</a></li>
            }
        }
    </ul>
    @*Button 2 ends*@

    @*Button 3 begins*@
    <a class="btn btn-secondary dropdown-toggle mx-2" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
        Filter By Style
    </a>
    <ul class="dropdown-menu">
        @foreach (var artstyle in Model.ArtStyles)
        {
            @if (artstyle.ID == (int)ViewData["CurrentStyleFilter"])
            {
                <li><a class="dropdown-item" href="?ColorFilter=@ViewData["CurrentColorFilter"]&MediumFilter=@ViewData["CurrentMediumFilter"]&StyleFilter=0" style="color:red">@artstyle.Name</a></li>
            }
            else
            {
                <li><a class="dropdown-item" href="?ColorFilter=@ViewData["CurrentColorFilter"]&MediumFilter=@ViewData["CurrentMediumFilter"]&StyleFilter=@artstyle.ID">@artstyle.Name</a></li>
            }
        }
    </ul>
    @*Button 3 ends*@

</div>

<p></p>
@*Here is where we define main for lazy load*@
<div class="container" id="main">
    <div class="row masonry-grid">
        @for (var i = 0; i < Model.Arts.Count; i++)
        {
            if (Model.Arts[i].User != null)
            {
                <div class="col-md-4 col-lg-3 masonry-item mt-4">
                    <div class="image-container">
                        <a asp-controller="Home" asp-action="Art" asp-route-id="@Model.Arts[i].ID">
                            <img src="@(@Model.ArtImages[i].Source + @Model.ArtImages[i].FileName)" alt="@Model.Arts[i].Name" class="img-fluid border border-1 border-warning" onContextMenu="return false;">
                            <div class="image-info">
                                <table style="width:100%">
                                    <tr>
                                        @if (Model.Arts[i].User.firstName != null && Model.Arts[i].User.lastName != null)
                                        {
                                            <td style="text-align:left">
                                                @Model.Arts[i].User.firstName @Model.Arts[i].User.lastName
                                            </td>
                                        }                                                                              
                                        @if (Model.Arts[i].Available == true)
                                        {
                                            <td style="text-align:right">
                                                &#36 @Model.Arts[i].Price
                                            </td>
                                        }
                                        else
                                        {
                                            <td style="text-align:right">
                                                SOLD
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        <td style="text-align:left">
                                        @if (Model.Arts[i].Name != null)
                                        {
                                            @Model.Arts[i].Name
                                        }
                                        </td>
                                        @if (Model.Arts[i].ArtMediumLinks != null)
                                        {
                                            <td style="text-align:right">
                                            @foreach (var medium in Model.Arts[i].ArtMediumLinks)
                                            {
                                                @if (medium.ArtMedium != null)
                                                {   
                                                    @if (medium.ArtMedium.Name != null)
                                                    {
                                                        <i>@medium.ArtMedium.Name</i>                                                        
                                                    }
                                                }
                                            }
                                            </td>
                                        }
                                    </tr>
                                </table>
                            </div>
                        </a>
                    </div>
                </div>
            }
        }
    </div>
</div>
@section scripts {
    <script src="https://unpkg.com/imagesloaded@5/imagesloaded.pkgd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/masonry/4.2.2/masonry.pkgd.min.js"></script>

    <script>
        var masonryGrid = document.querySelector('.masonry-grid');
        var masonry = new Masonry(masonryGrid, {
            itemSelector: '.masonry-item',
            columnWidth: '.col-md-4',
            percentPosition: true
        });
        imagesLoaded(masonryGrid).on('progress', function() {
            // layout Masonry after each image loads
            msnry.layout();
        });

       </script>

     @*Below is the script for creating the Lazy load within the id of main*@
    <script type="text/javascript" src = "jquery.lazy.min.js" ></script>
    <script type="text/javascript" src="plugins/jquery.lazy.picture.min.js"></script>
    <script>$('#main .img-responsive').lazy();</script>     
    
}