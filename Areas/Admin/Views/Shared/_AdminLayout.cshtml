@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    // nested layout view
    Layout = "~/Views/Shared/_Layout.cshtml";

    // use current controller to determine if tab is active
    var current = ViewContext.RouteData.Values["controller"]!.ToString() ?? "";
}


<ul class="nav nav-tabs mt-2 mb-3">
    <li class="nav-item">
        <a asp-action="Index" asp-controller="Account"
           class="nav-link @Nav.Active("Account", current)">
            Manage Account
        </a>
    </li>
    <li class="nav-item">
        <a asp-action="Index" asp-controller="Art"
           class="nav-link @Nav.Active("Art", current)">
            Manage Art
        </a>
    </li>
    @if (User.IsInRole("Admin"))
    {        
    <li class="nav-item">
        <a asp-action="Index" asp-controller="User"
           class="nav-link @Nav.Active("User", current)">
            Manage Users
        </a>
    </li>
    <li class="nav-item">
        <a asp-action="Index" asp-controller="ArtColor"
           class="nav-link @Nav.Active("ArtColor", current)">
            Art Colors
        </a>
    </li>
    <li class="nav-item">
        <a asp-action="Index" asp-controller="ArtMedium"
           class="nav-link @Nav.Active("ArtMedium", current)">
            Art Mediums
        </a>
    </li>
    <li class="nav-item">
        <a asp-action="Index" asp-controller="ArtStyle"
           class="nav-link @Nav.Active("ArtStyle", current)">
            Art Styles
        </a>
    </li>
    }
</ul>

@RenderBody()

@section styles { @RenderSection("styles", required: false) }
@section scripts { @RenderSection("scripts", required: false) }